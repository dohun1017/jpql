<?xml version="1.0" encoding="UTF-8"?>
<persistence version="2.2"
             xmlns="http://xmlns.jcp.org/xml/ns/persistence" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence http://xmlns.jcp.org/xml/ns/persistence/persistence_2_2.xsd">
    <persistence-unit name="hello">
        <properties>
            <!-- 필수 속성 -->
            <property name="javax.persistence.jdbc.driver" value="org.h2.Driver"/>
            <property name="javax.persistence.jdbc.user" value="sa"/>
            <property name="javax.persistence.jdbc.password" value=""/>
            <property name="javax.persistence.jdbc.url" value="jdbc:h2:tcp://localhost/~/test"/>
            <property name="hibernate.dialect" value="org.hibernate.dialect.H2Dialect"/>

            <!-- 옵션 -->
            <property name="hibernate.show_sql" value="true"/>
            <property name="hibernate.format_sql" value="true"/>
            <property name="hibernate.use_sql_comments" value="true"/>

            <!--JPA는 jdbc batch의 크기만큼 쿼리를 모아서 한꺼번에 쿼리를 DB에 보낸다.-->
<!--            <property name="hibernate.jdbc.batch_size" value="4"/>-->
<!--            <property name="hibernate.order_inserts" value="true"/>-->
<!--            <property name="hibernate.order_updates" value="true"/>-->
<!--            <property name="batch_versioned_data" value="true"/>-->


            <!--
            DDL 관련 속성
            create: 기존테이블 삭제 후 다시 생성 (운영DB에는 사용하지 말 것)
            create-drop: create와 같으나 종료시점에 테이블 drop (운영DB에는 사용하지 말 것)
            update: 변경분만 반영 - 추가만 가능(int age 추가) (운영DB에는 사용하지 말 것)
            validate: 엔티티와 테이블이 정상 매핑되었는지만 확인
            none: 사용하지 않음

            개발 초기 - create, update
            테스트 서버 - update, validate
            스테이징과 운영 서버는 validate 또는 none
            -->
            <property name="hibernate.hbm2ddl.auto" value="create" />
        </properties>
    </persistence-unit>
</persistence>